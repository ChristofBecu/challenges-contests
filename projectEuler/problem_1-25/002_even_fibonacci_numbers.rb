# * Even Fibonacci numbers
# * Problem 2

# ? Each new term in the Fibonacci sequence is generated by adding the
# ? previous two terms. By starting with 1 and 2, the first 10 terms will be:

# ? 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# ? By considering the terms in the Fibonacci sequence whose values
# ? do not exceed four million, find the sum of the even-valued terms.

# ! 4613732

# * memoization
def fib(number, computed = { 0 => 0, 1 => 1 })
  unless computed.include?(number)
    computed[number] = fib(number - 1, computed) + fib(number - 2, computed)
  end
  computed[number]
end

# * list
def fiblist(number)
  fibs = [0, 1]
  (2..number + 1).each { fibs << fibs[-1] + fibs[-2] }
  fibs
end

limit = 4_000_000
sum = 0
a = 1
b = 1
c = a + b
while c < limit
  sum += c
  a = b + c
  b = c + a
  c = a + b
end
puts sum
